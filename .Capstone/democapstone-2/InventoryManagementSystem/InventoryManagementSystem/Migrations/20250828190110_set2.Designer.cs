// <auto-generated />
using System;
using InventoryManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250828190110_set2")]
    partial class set2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryManagementSystem.Models.InventoryMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovementType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityChanged")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("InventoryMovements");
                });

            modelBuilder.Entity("InventoryManagementSystem.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LowStockThreshold")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 8, 28, 19, 1, 9, 668, DateTimeKind.Utc).AddTicks(8759),
                            Description = "High-performance business laptop",
                            LowStockThreshold = 5,
                            Name = "Laptop",
                            Price = 1200.00m,
                            Quantity = 15,
                            Sku = "ELEC-001"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 8, 28, 19, 1, 9, 668, DateTimeKind.Utc).AddTicks(8762),
                            Description = "27-inch 4K monitor",
                            LowStockThreshold = 5,
                            Name = "Monitor",
                            Price = 450.00m,
                            Quantity = 22,
                            Sku = "ELEC-002"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Furniture",
                            CreatedAt = new DateTime(2025, 8, 28, 19, 1, 9, 668, DateTimeKind.Utc).AddTicks(8764),
                            Description = "Ergonomic office chair",
                            LowStockThreshold = 5,
                            Name = "Desk Chair",
                            Price = 250.00m,
                            Quantity = 8,
                            Sku = "FURN-001"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Stationery",
                            CreatedAt = new DateTime(2025, 8, 28, 19, 1, 9, 668, DateTimeKind.Utc).AddTicks(8783),
                            Description = "A4 size, 100 pages",
                            LowStockThreshold = 10,
                            Name = "Notebook",
                            Price = 5.99m,
                            Quantity = 3,
                            Sku = "STAT-001"
                        });
                });

            modelBuilder.Entity("InventoryManagementSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 28, 19, 1, 9, 364, DateTimeKind.Utc).AddTicks(4343),
                            Email = "admin@inventory.com",
                            IsActive = true,
                            Password = "$2a$11$HKh0q3G5YOnk3MJ46/2RlOCLw9N7GaYqQHGUVhQSP7NUS1QL9lm5a",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 28, 19, 1, 9, 523, DateTimeKind.Utc).AddTicks(640),
                            Email = "manager@inventory.com",
                            IsActive = true,
                            Password = "$2a$11$TCHNxxYa0lZPrNQBCWSLxOWT29vRt5TsjQe/lXxkBU8boq4hYWbUS",
                            Role = "Manager",
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 28, 19, 1, 9, 668, DateTimeKind.Utc).AddTicks(8008),
                            Email = "staff@inventory.com",
                            IsActive = true,
                            Password = "$2a$11$rmnaslsFZf97a9fGTTMX4eMvqiBvXdU0RN21lhU9EUnrbpVWpmKcC",
                            Role = "Staff",
                            Username = "staff"
                        });
                });

            modelBuilder.Entity("InventoryManagementSystem.Models.UserApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReviewedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReviewedByAdminId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReviewedByAdminId");

                    b.HasIndex("UserId");

                    b.ToTable("UserApprovals");
                });

            modelBuilder.Entity("InventoryManagementSystem.Models.InventoryMovement", b =>
                {
                    b.HasOne("InventoryManagementSystem.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryManagementSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InventoryManagementSystem.Models.UserApproval", b =>
                {
                    b.HasOne("InventoryManagementSystem.Models.User", "ReviewedByAdmin")
                        .WithMany()
                        .HasForeignKey("ReviewedByAdminId");

                    b.HasOne("InventoryManagementSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReviewedByAdmin");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
